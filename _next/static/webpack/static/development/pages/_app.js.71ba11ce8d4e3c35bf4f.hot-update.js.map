{"version":3,"file":"static/webpack/static/development/pages/_app.js.71ba11ce8d4e3c35bf4f.hot-update.js","sources":["webpack:///./organisms/Navigator.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Box, { BoxProps, composedBoxStyle } from '../atoms/Box'\nimport Text from '../atoms/Text'\nimport styled from 'styled-components'\nimport { useRouter } from 'next/router'\nimport data from '../generated/posts'\nimport Link from 'next/link'\nimport Icon from '@mdi/react'\nimport { mdiFileTree, mdiMenu, mdiClose } from '@mdi/js'\nimport Flex from '../atoms/Flex'\nimport {\n  compose,\n  position,\n  PositionProps,\n  height,\n  HeightProps,\n  display,\n  DisplayProps\n} from 'styled-system'\n\nconst NavContainer = styled.div<BoxProps & PositionProps & HeightProps>(\n  {},\n  compose(\n    composedBoxStyle,\n    position,\n    height\n  )\n)\n\nconst NavLinkList = styled.ul<BoxProps & DisplayProps>(\n  {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0\n  },\n  compose(\n    composedBoxStyle,\n    display\n  )\n)\nconst Avartar = styled(Box).attrs({\n  as: 'img',\n  src: 'https://avatars3.githubusercontent.com/u/5865853?s=40&v=4',\n  width: 20,\n  height: 20,\n  mr: 2\n})``\n\ninterface NavLinkListItemProps extends BoxProps {\n  href: string\n  as?: string\n  children: React.ReactNode\n  newTab?: boolean\n  active?: boolean\n}\n\nconst NavLinkListItem = ({\n  href,\n  as: asPath,\n  children,\n  newTab,\n  ...props\n}: NavLinkListItemProps) => {\n  const router = useRouter()\n  const active = asPath === router.asPath\n\n  return (\n    <Box as='li' {...(props as any)}>\n      <Link href={href} as={asPath} passHref>\n        <Text\n          as='a'\n          children={children}\n          color={active ? 'inherit' : '#777'}\n          textDecoration='none'\n          textStyle='monospace'\n          pl={3}\n          py={1}\n          backgroundColor={active ? 'rgba(0, 0, 0, 0.1)' : undefined}\n          css={`\n            display: flex;\n            align-items: center;\n            transition: background-color ease-in-out 200ms;\n            &:hover {\n              background-color: rgba(0, 0, 0, 0.1);\n              text-decoration: none;\n            }\n          `}\n        />\n      </Link>\n    </Box>\n  )\n}\n\nexport default () => {\n  const [closed, setClosed] = useState(true)\n  return (\n    <NavContainer\n      width={[1, 256]}\n      position={['fixed', 'sticky']}\n      backgroundColor='white'\n      top={0}\n      height={['inherit', '100vh']}\n    >\n      <Box>\n        <button onClick={() => setClosed(!closed)}>\n          {closed ? (\n            <Icon color='black' size='1em' path={mdiMenu} />\n          ) : (\n            <Icon path={mdiClose} color='black' size='1em' />\n          )}\n        </button>\n      </Box>\n      <NavLinkList display={[closed ? 'none' : 'block', 'block']}>\n        <NavLinkListItem href='/' fontSize='3'>\n          <Avartar />\n          Rokt33r's Lab\n        </NavLinkListItem>\n        <NavLinkListItem href='/about'>üë®‚ÄçüöÄ /about</NavLinkListItem>\n        <NavLinkListItem href='/posts'>üìù /posts</NavLinkListItem>\n        {data.categories.map(category => (\n          <NavLinkListItem\n            href={`/categories/[category]?category=${category}`}\n            as={`/categories/${category}`}\n            key={category}\n          >\n            <Flex ml={2} flexDirection='row' alignItems='center'>\n              <Icon path={mdiFileTree} size='12px' />\n              <Text ml={2}>{category}</Text>\n            </Flex>\n          </NavLinkListItem>\n        ))}\n      </NavLinkList>\n    </NavContainer>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;;;;;;AAeA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAseA;;;;A","sourceRoot":""}